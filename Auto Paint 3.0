-- Settings --

local color = Color3.fromRGB(255,255,255)

-- Values --

local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local tweenService = game:GetService("TweenService")

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

local provincesFolder = Instance.new("Model")
provincesFolder.Parent = workspace
local highlight = Instance.new("Highlight")
highlight.FillColor = color
highlight.FillTransparency = 0.8
highlight.Parent = workspace
highlight.Adornee = provincesFolder

-- MODERN UI CREATION --
local UI = Instance.new("ScreenGui",player.PlayerGui)
UI.ResetOnSpawn = false
UI.IgnoreGuiInset = true

-- Main Container
local mainContainer = Instance.new("Frame",UI)
mainContainer.Size = UDim2.new(0,320,0,480)
mainContainer.Position = UDim2.new(0.5,-160,0.5,-240)
mainContainer.BackgroundColor3 = Color3.fromRGB(25,25,25)
mainContainer.BorderSizePixel = 0

-- Modern Corner Radius
local mainCorner = Instance.new("UICorner",mainContainer)
mainCorner.CornerRadius = UDim.new(0,16)

-- Modern Shadow Effect
local shadow = Instance.new("Frame",UI)
shadow.Size = UDim2.new(0,324,0,484)
shadow.Position = UDim2.new(0.5,-162,0.5,-238)
shadow.BackgroundColor3 = Color3.fromRGB(0,0,0)
shadow.BackgroundTransparency = 0.8
shadow.ZIndex = -1
local shadowCorner = Instance.new("UICorner",shadow)
shadowCorner.CornerRadius = UDim.new(0,16)

-- Header Bar
local headerBar = Instance.new("Frame",mainContainer)
headerBar.Size = UDim2.new(1,0,0,50)
headerBar.BackgroundColor3 = Color3.fromRGB(32,32,32)
headerBar.BorderSizePixel = 0
local headerCorner = Instance.new("UICorner",headerBar)
headerCorner.CornerRadius = UDim.new(0,16)

-- Header Bottom Fix
local headerFix = Instance.new("Frame",headerBar)
headerFix.Size = UDim2.new(1,0,0,16)
headerFix.Position = UDim2.new(0,0,1,-16)
headerFix.BackgroundColor3 = Color3.fromRGB(32,32,32)
headerFix.BorderSizePixel = 0

-- Title
local titleLabel = Instance.new("TextLabel",headerBar)
titleLabel.Size = UDim2.new(0,150,1,0)
titleLabel.Position = UDim2.new(0,16,0,0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Paint Admin"
titleLabel.TextColor3 = Color3.fromRGB(255,255,255)
titleLabel.TextSize = 16
titleLabel.Font = Enum.Font.GothamSemiBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Close Button
local closeButton = Instance.new("TextButton",headerBar)
closeButton.Size = UDim2.new(0,30,0,30)
closeButton.Position = UDim2.new(1,-40,0,10)
closeButton.BackgroundColor3 = Color3.fromRGB(255,69,69)
closeButton.BorderSizePixel = 0
closeButton.Text = "✕"
closeButton.TextColor3 = Color3.fromRGB(255,255,255)
closeButton.TextSize = 14
closeButton.Font = Enum.Font.GothamBold
local closeCorner = Instance.new("UICorner",closeButton)
closeCorner.CornerRadius = UDim.new(0,8)

-- Minimize Button
local minimizeButton = Instance.new("TextButton",headerBar)
minimizeButton.Size = UDim2.new(0,30,0,30)
minimizeButton.Position = UDim2.new(1,-80,0,10)
minimizeButton.BackgroundColor3 = Color3.fromRGB(255,189,69)
minimizeButton.BorderSizePixel = 0
minimizeButton.Text = "−"
minimizeButton.TextColor3 = Color3.fromRGB(255,255,255)
minimizeButton.TextSize = 16
minimizeButton.Font = Enum.Font.GothamBold
local minimizeCorner = Instance.new("UICorner",minimizeButton)
minimizeCorner.CornerRadius = UDim.new(0,8)

-- Stats Display
local statsLabel = Instance.new("TextLabel",headerBar)
statsLabel.Size = UDim2.new(0,80,1,0)
statsLabel.Position = UDim2.new(1,-130,0,0)
statsLabel.BackgroundTransparency = 1
statsLabel.Text = "0 p/s"
statsLabel.TextColor3 = Color3.fromRGB(170,170,170)
statsLabel.TextSize = 12
statsLabel.Font = Enum.Font.Gotham
statsLabel.TextXAlignment = Enum.TextXAlignment.Right

-- Content Area
local contentFrame = Instance.new("ScrollingFrame",mainContainer)
contentFrame.Size = UDim2.new(1,-20,1,-70)
contentFrame.Position = UDim2.new(0,10,0,60)
contentFrame.BackgroundTransparency = 1
contentFrame.BorderSizePixel = 0
contentFrame.ScrollBarThickness = 4
contentFrame.ScrollBarImageColor3 = Color3.fromRGB(80,80,80)
contentFrame.CanvasSize = UDim2.new(0,0,0,0)
contentFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y

-- Content Layout
local contentLayout = Instance.new("UIListLayout",contentFrame)
contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
contentLayout.Padding = UDim.new(0,8)

local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://4612386227"
sound.Parent = workspace
local changecolor = Instance.new("Sound")
changecolor.SoundId = "rbxassetid://4612383790"
changecolor.Parent = workspace
local sound2 = Instance.new("Sound")
sound2.SoundId = "rbxassetid://7486747911"
sound2.Parent = workspace
sound2.PlaybackSpeed = 2
local provinceSound = Instance.new("Sound")
provinceSound.SoundId = "rbxassetid://5694665239"
provinceSound.Parent = workspace

-- Variables
local dragSelectMode = false
local isDragging = false
local dragConnection = nil
local selectedInDrag = {}
local ultraFastMode = false
local ultraDefenseConnection = nil
local isMinimized = false

local provinces = {}
local provincespersecond = 0
local pps = 0
local selectColorMode = false
local removeProvincesMode = false
local selectProvincesMode = false
local safeMode = false
local newpaint = false
local painting = true
local keepTerColor = false
local provinceCodeGenerator = 0

-- Done Button
local doneButton = Instance.new("TextButton",UI)
doneButton.Size = UDim2.new(0,100,0,35)
doneButton.Position = UDim2.new(0.5,-50,0.5,-200)
doneButton.BackgroundColor3 = Color3.fromRGB(52,199,89)
doneButton.BorderSizePixel = 0
doneButton.Text = "Done"
doneButton.TextColor3 = Color3.fromRGB(255,255,255)
doneButton.TextSize = 14
doneButton.Font = Enum.Font.GothamSemiBold
doneButton.Visible = false
local doneCorner = Instance.new("UICorner",doneButton)
doneCorner.CornerRadius = UDim.new(0,8)

-- Dragging Variables
local dragging = false
local dragStart = nil
local startPos = nil

-- Functions --

-- ULTRA DEFENSE SYSTEM (OPTIMIZED) --
local function startUltraDefense()
	if ultraDefenseConnection then
		ultraDefenseConnection:Disconnect()
	end
	
	-- Optimized defense with proper timing
	ultraDefenseConnection = runService.Heartbeat:Connect(function()
		if not ultraFastMode then return end
		
		-- Check only every few frames to prevent lag
		if tick() % 0.1 < 0.016 then -- Every 0.1 seconds
			for _, info in pairs(provinces) do
				if info.Province and info.Province.Parent and info.Province.Color ~= color then
					-- Single repair attempt per check
					if player and player.Character and player.Character:FindFirstChild("PaintBucket") then
						local args = {
							[1] = "PaintPart",
							[2] = {
								["Part"] = info.Province,
								["Color"] = color
							},
							[3] = "Peace"
						}
						pcall(function()
							game:GetService("Players").LocalPlayer.Character.PaintBucket.Remotes.ServerControls:InvokeServer(unpack(args))
						end)
						provincespersecond = provincespersecond + 1
					end
				end
			end
		end
	end)
end

-- DRAG SELECT FUNCTIONS --
local function startDragSelect()
	if dragConnection then
		dragConnection:Disconnect()
	end
	
	dragConnection = mouse.Move:Connect(function()
		if isDragging and dragSelectMode then
			if mouse.Target and mouse.Target.Name == "Province" then
				local alreadySelected = false
				
				for _, info in pairs(provinces) do
					if info.Province == mouse.Target then
						alreadySelected = true
						break
					end
				end
				
				if not alreadySelected then
					for _, selected in pairs(selectedInDrag) do
						if selected == mouse.Target then
							alreadySelected = true
							break
						end
					end
				end
				
				if not alreadySelected then
					table.insert(selectedInDrag, mouse.Target)
					
					provinceSound:Play()
					
					local clone = mouse.Target:Clone()
					clone.Position -= Vector3.new(0, 0.01, 0)
					clone.Material = "Glass"
					clone.Transparency = 1000000
					clone.Parent = provincesFolder
					
					local coro = coroutine.create(paintProvinceLoop)
					coroutine.resume(coro, mouse.Target, coro, clone)
					
					local tempHighlight = Instance.new("SelectionBox")
					tempHighlight.Adornee = mouse.Target
					tempHighlight.Color3 = Color3.fromRGB(52,199,89)
					tempHighlight.Parent = mouse.Target
					tempHighlight.Transparency = 0.3
					
					task.spawn(function()
						task.wait(0.5)
						if tempHighlight then
							tempHighlight:Destroy()
						end
					end)
				end
			end
		end
	end)
end

local function finishDragSelect()
	if dragConnection then
		dragConnection:Disconnect()
		dragConnection = nil
	end
	
	selectedInDrag = {}
	isDragging = false
end

-- OPTIMIZED paintProvinceLoop --
local function paintProvinceLoop(province,coro,highlighty)
	local savedColor = color
	local active = true

	local eventObject = {}
	function eventObject:Disconnect()
		active = false
	end

	task.spawn(function()
		while active do
			if painting then
				if player and player.Character and player.Character:FindFirstChild("PaintBucket") then
					if (province.Color ~= color and keepTerColor == false) or (keepTerColor == true and province.Color ~= savedColor) then
						local args = {
							[1] = "PaintPart",
							[2] = {
								["Part"] = province,
								["Color"] = keepTerColor and savedColor or color
							},
							[3] = "Peace"
						}
						
						-- Optimized painting based on mode
						if ultraFastMode then
							-- Double paint for ultra mode but not excessive
							pcall(function()
								game:GetService("Players").LocalPlayer.Character.PaintBucket.Remotes.ServerControls:InvokeServer(unpack(args))
							end)
							pcall(function()
								game:GetService("Players").LocalPlayer.Character.PaintBucket.Remotes.ServerControls:InvokeServer(unpack(args))
							end)
							provincespersecond = provincespersecond + 2
						else
							pcall(function()
								game:GetService("Players").LocalPlayer.Character.PaintBucket.Remotes.ServerControls:InvokeServer(unpack(args))
							end)
							provincespersecond = provincespersecond + 1
						end
					end
				end
			end

			-- Optimized timing
			if safeMode then
				task.wait(0.3)
			elseif ultraFastMode then
				task.wait(0.05) -- Faster but not laggy
			elseif newpaint then
				task.wait(0.01)
			else
				task.wait(0.02)
			end
		end
	end)

	local provinceInfo = {
		["Province"] = province,
		["Coroutine"] = coro,
		["Event"] = eventObject,
		["Highlight"] = highlighty
	}
	table.insert(provinces,provinceInfo)
	provinceCodeGenerator += 1
end

-- MODERN OPTION CREATOR --
local function createModernOption(optionType, text, customText, enabled)
	local optionFrame = Instance.new("Frame", contentFrame)
	optionFrame.Size = UDim2.new(1,0,0,40)
	optionFrame.BackgroundColor3 = Color3.fromRGB(35,35,35)
	optionFrame.BorderSizePixel = 0
	
	local optionCorner = Instance.new("UICorner", optionFrame)
	optionCorner.CornerRadius = UDim.new(0,8)
	
	local optionLabel = Instance.new("TextLabel", optionFrame)
	optionLabel.Size = UDim2.new(1,-100,1,0)
	optionLabel.Position = UDim2.new(0,12,0,0)
	optionLabel.BackgroundTransparency = 1
	optionLabel.Text = text
	optionLabel.TextColor3 = Color3.fromRGB(220,220,220)
	optionLabel.TextSize = 13
	optionLabel.Font = Enum.Font.Gotham
	optionLabel.TextXAlignment = Enum.TextXAlignment.Left
	
	if optionType == "switch" then
		local switchBg = Instance.new("Frame", optionFrame)
		switchBg.Size = UDim2.new(0,40,0,20)
		switchBg.Position = UDim2.new(1,-50,0.5,-10)
		switchBg.BackgroundColor3 = enabled and Color3.fromRGB(52,199,89) or Color3.fromRGB(60,60,60)
		switchBg.BorderSizePixel = 0
		local switchBgCorner = Instance.new("UICorner", switchBg)
		switchBgCorner.CornerRadius = UDim.new(0,10)
		
		local switchButton = Instance.new("TextButton", switchBg)
		switchButton.Size = UDim2.new(0,16,0,16)
		switchButton.Position = enabled and UDim2.new(1,-18,0,2) or UDim2.new(0,2,0,2)
		switchButton.BackgroundColor3 = Color3.fromRGB(255,255,255)
		switchButton.BorderSizePixel = 0
		switchButton.Text = ""
		local switchButtonCorner = Instance.new("UICorner", switchButton)
		switchButtonCorner.CornerRadius = UDim.new(0,8)
		
		return switchButton
		
	elseif optionType == "color" then
		local colorButton = Instance.new("TextButton", optionFrame)
		colorButton.Size = UDim2.new(0,30,0,20)
		colorButton.Position = UDim2.new(1,-40,0.5,-10)
		colorButton.BackgroundColor3 = color
		colorButton.BorderSizePixel = 0
		colorButton.Text = ""
		local colorCorner = Instance.new("UICorner", colorButton)
		colorCorner.CornerRadius = UDim.new(0,6)
		
		return colorButton
		
	elseif optionType == "custom" then
		local customButton = Instance.new("TextButton", optionFrame)
		customButton.Size = UDim2.new(0,60,0,24)
		customButton.Position = UDim2.new(1,-70,0.5,-12)
		customButton.BackgroundColor3 = Color3.fromRGB(0,122,255)
		customButton.BorderSizePixel = 0
		customButton.Text = customText
		customButton.TextColor3 = Color3.fromRGB(255,255,255)
		customButton.TextSize = 12
		customButton.Font = Enum.Font.GothamSemiBold
		local customCorner = Instance.new("UICorner", customButton)
		customCorner.CornerRadius = UDim.new(0,6)
		
		return customButton
	end
end

-- Window Controls
local function toggleMinimize()
	isMinimized = not isMinimized
	local targetSize = isMinimized and UDim2.new(0,320,0,50) or UDim2.new(0,320,0,480)
	tweenService:Create(mainContainer, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {Size = targetSize}):Play()
	contentFrame.Visible = not isMinimized
end

-- Event Connections
closeButton.MouseButton1Click:Connect(function()
	UI:Destroy()
end)

minimizeButton.MouseButton1Click:Connect(function()
	toggleMinimize()
end)

-- Window Dragging
headerBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = mainContainer.Position
		
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

headerBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

userInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		mainContainer.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

-- Create Options
local button2 = createModernOption("color","Country Color")
local button1 = createModernOption("custom","Protect Province","Add")
local dragSelectButton = createModernOption("custom","Drag Select","Drag")
local button5 = createModernOption("custom","Unprotect Province","Remove")
local button3 = createModernOption("custom","Clear Provinces","Clear")
local button4 = createModernOption("switch","Safe Mode")
local togglePaintButton = createModernOption("switch","Toggle Paint",nil,true)
local newPaintButton = createModernOption("switch","Fast Paint")
local territoryColorButton = createModernOption("switch","Keep Territory Color")
local randomColorButton = createModernOption("custom","Random Color","Random")
local ultraFastButton = createModernOption("switch","Ultra Defense")

-- Initialize
wait(1)
sound:Play()

-- Smooth entrance animation
mainContainer.Position = UDim2.new(0.5,-160,1,100)
tweenService:Create(mainContainer, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
	Position = UDim2.new(0.5,-160,0.5,-240)
}):Play()

-- Mouse Events
mouse.Button1Down:Connect(function()
	if dragSelectMode then
		isDragging = true
		startDragSelect()
		
		if mouse.Target and mouse.Target.Name == "Province" then
			local alreadySelected = false
			for _, info in pairs(provinces) do
				if info.Province == mouse.Target then
					alreadySelected = true
					break
				end
			end
			
			if not alreadySelected then
				table.insert(selectedInDrag, mouse.Target)
				
				provinceSound:Play()
				
				local clone = mouse.Target:Clone()
				clone.Position -= Vector3.new(0, 0.01, 0)
				clone.Material = "Glass"
				clone.Transparency = 1000000
				clone.Parent = provincesFolder
				
				local coro = coroutine.create(paintProvinceLoop)
				coroutine.resume(coro, mouse.Target, coro, clone)
			end
		end
		return
	end
	
	if mouse.Target and mouse.Target.Name == "Province" then
		if selectColorMode then
			color = mouse.Target.Color
			selectColorMode = false
			mainContainer.Visible = true
			button2.BackgroundColor3 = color
			changecolor:Play()
		end
		if selectProvincesMode then
			provinceSound:Play()
			local clone = mouse.Target:Clone()

			local coro = coroutine.create(paintProvinceLoop)
			coroutine.resume(coro,mouse.Target,coro,clone)

			clone.Position -= Vector3.new(0,0.01,0)
			clone.Material = "Glass"
			clone.Transparency = 1000000
			clone.Parent = provincesFolder
		end
		if removeProvincesMode then
			for _,info in pairs(provinces) do
				if mouse.Target == info.Province then
					coroutine.close(info.Coroutine)
					info.Event:Disconnect()
					info.Highlight:Destroy()
				end
			end
		end
	end
end)

mouse.Button1Up:Connect(function()
	if dragSelectMode and isDragging then
		finishDragSelect()
	end
end)

-- Button Events
button2.BackgroundColor3 = color
button2.MouseButton1Click:Connect(function()
	mainContainer.Visible = false
	selectColorMode = true
end)

button1.MouseButton1Click:Connect(function()
	mainContainer.Visible = false
	selectProvincesMode = true
	doneButton.Visible = true
end)

dragSelectButton.MouseButton1Click:Connect(function()
	mainContainer.Visible = false
	dragSelectMode = true
	doneButton.Visible = true
	doneButton.Text = "Finish Drag"
end)

doneButton.MouseButton1Click:Connect(function()
	removeProvincesMode = false
	selectProvincesMode = false
	dragSelectMode = false
	mainContainer.Visible = true
	doneButton.Visible = false
	doneButton.Text = "Done"
	
	if dragConnection then
		dragConnection:Disconnect()
		dragConnection = nil
	end
end)

button3.MouseButton1Click:Connect(function()
	for _,info in pairs(provinces) do
		coroutine.close(info.Coroutine)
		info.Event:Disconnect()
		info.Highlight:Destroy()
	end
	provinces = {}
	for _,child in pairs(provincesFolder:GetChildren()) do
		child:Destroy()
	end
end)

button4.MouseButton1Click:Connect(function()
	sound2:Play()
	safeMode = not safeMode
	local bg = button4.Parent
	local newColor = safeMode and Color3.fromRGB(52,199,89) or Color3.fromRGB(60,60,60)
	local newPos = safeMode and UDim2.new(1,-18,0,2) or UDim2.new(0,2,0,2)
	
	tweenService:Create(bg, TweenInfo.new(0.2), {BackgroundColor3 = newColor}):Play()
	tweenService:Create(button4, TweenInfo.new(0.2), {Position = newPos}):Play()
end)

button5.MouseButton1Click:Connect(function()
	mainContainer.Visible = false
	removeProvincesMode = true
	doneButton.Visible = true
end)

togglePaintButton.MouseButton1Click:Connect(function()
	sound2:Play()
	painting = not painting
	local bg = togglePaintButton.Parent
	local newColor = painting and Color3.fromRGB(52,199,89) or Color3.fromRGB(60,60,60)
	local newPos = painting and UDim2.new(1,-18,0,2) or UDim2.new(0,2,0,2)
	
	tweenService:Create(bg, TweenInfo.new(0.2), {BackgroundColor3 = newColor}):Play()
	tweenService:Create(togglePaintButton, TweenInfo.new(0.2), {Position = newPos}):Play()
end)

newPaintButton.MouseButton1Click:Connect(function()
	sound2:Play()
	newpaint = not newpaint
	local bg = newPaintButton.Parent
	local newColor = newpaint and Color3.fromRGB(52,199,89) or Color3.fromRGB(60,60,60)
	local newPos = newpaint and UDim2.new(1,-18,0,2) or UDim2.new(0,2,0,2)
	
	tweenService:Create(bg, TweenInfo.new(0.2), {BackgroundColor3 = newColor}):Play()
	tweenService:Create(newPaintButton, TweenInfo.new(0.2), {Position = newPos}):Play()
end)

territoryColorButton.MouseButton1Click:Connect(function()
	sound2:Play()
	keepTerColor = not keepTerColor
	local bg = territoryColorButton.Parent
	local newColor = keepTerColor and Color3.fromRGB(52,199,89) or Color3.fromRGB(60,60,60)
	local newPos = keepTerColor and UDim2.new(1,-18,0,2) or UDim2.new(0,2,0,2)
	
	tweenService:Create(bg, TweenInfo.new(0.2), {BackgroundColor3 = newColor}):Play()
	tweenService:Create(territoryColorButton, TweenInfo.new(0.2), {Position = newPos}):Play()
end)

randomColorButton.MouseButton1Click:Connect(function()
	color = Color3.fromRGB(math.random(0,255),math.random(0,255),math.random(0,255))
	button2.BackgroundColor3 = color
	changecolor:Play()
end)

-- Ultra Defense (Optimized)
ultraFastButton.MouseButton1Click:Connect(function()
	sound2:Play()
	ultraFastMode = not ultraFastMode
	
	if ultraFastMode then
		startUltraDefense()
		print("🔥 ULTRA DEFENSE: ON (Optimized)")
	else
		if ultraDefenseConnection then
			ultraDefenseConnection:Disconnect()
		end
		print("🔥 ULTRA DEFENSE: OFF")
	end
	
	local bg = ultraFastButton.Parent
	local newColor = ultraFastMode and Color3.fromRGB(255,69,69) or Color3.fromRGB(60,60,60)
	local newPos = ultraFastMode and UDim2.new(1,-18,0,2) or UDim2.new(0,2,0,2)
	
	tweenService:Create(bg, TweenInfo.new(0.2), {BackgroundColor3 = newColor}):Play()
	tweenService:Create(ultraFastButton, TweenInfo.new(0.2), {Position = newPos}):Play()
end)

-- Keyboard shortcuts
userInputService.InputBegan:Connect(function(input,isTyping)
	if isTyping == false then
		if input.KeyCode == Enum.KeyCode.R then
			color = Color3.fromRGB(math.random(0,255),math.random(0,255),math.random(0,255))
			button2.BackgroundColor3 = color
			changecolor:Play()
		elseif input.KeyCode == Enum.KeyCode.Q then
			painting = not painting
		end
	end
end)

-- Stats Update Loop
while task.wait(1) do
	-- Modern color coding
	local statColor = Color3.fromRGB(170,170,170)
	if provincespersecond >= 50 then
		statColor = Color3.fromRGB(255,214,10)
	end
	if provincespersecond >= 100 then
		statColor = Color3.fromRGB(255,149,0)
	end
	if provincespersecond >= 300 then
		statColor = Color3.fromRGB(255,69,58)
	end
	if provincespersecond >= 1000 then
		statColor = Color3.fromRGB(191,90,242)
	end
	
	statsLabel.TextColor3 = statColor
	statsLabel.Text = provincespersecond.." p/s"
	pps = provincespersecond
	provincespersecond = 0
end
