-- Settings & Values (senin scriptinle aynı) --
local color = Color3.fromRGB(255,255,255)
local brushSize = 1
local shapeTool = "Free" -- "Free", "Rectangle", "Ellipse", "Fill"

-- Undo / Redo
local undoStack = {}
local redoStack = {}

local function pushUndo(province, oldColor, newColor)
    table.insert(undoStack, {Province = province, OldColor = oldColor, NewColor = newColor})
    redoStack = {} -- yeni işlem redo’yu temizler
end

local function undo()
    local last = table.remove(undoStack)
    if last then
        last.Province.Color = last.OldColor
        table.insert(redoStack, last)
    end
end

local function redo()
    local last = table.remove(redoStack)
    if last then
        last.Province.Color = last.NewColor
        table.insert(undoStack, last)
    end
end

-- Katman sistemi
local layers = {}
local currentLayer = 1

local function createLayer(name)
    layers[#layers+1] = {Name = name, Provinces = {}}
    currentLayer = #layers
end

local function addProvinceToLayer(province)
    if layers[currentLayer] then
        table.insert(layers[currentLayer].Provinces, province)
    end
end

-- Grid overlay
local grid = Instance.new("Frame", mainFrame)
grid.BackgroundTransparency = 1
grid.Size = UDim2.new(1,0,1,0)

local function drawGrid(cellSize)
    for _,v in pairs(grid:GetChildren()) do v:Destroy() end
    local width, height = mainFrame.AbsoluteSize.X, mainFrame.AbsoluteSize.Y
    for i = 0, width, cellSize do
        local line = Instance.new("Frame", grid)
        line.Size = UDim2.new(0,1,1,0)
        line.Position = UDim2.new(0, i,0,0)
        line.BackgroundColor3 = Color3.fromRGB(200,200,200)
        line.BackgroundTransparency = 0.7
    end
    for i = 0, height, cellSize do
        local line = Instance.new("Frame", grid)
        line.Size = UDim2.new(1,0,0,1)
        line.Position = UDim2.new(0,0,0,i)
        line.BackgroundColor3 = Color3.fromRGB(200,200,200)
        line.BackgroundTransparency = 0.7
    end
end

-- Seçim aracı
local selecting = false
local selectionStart
local selectionBox = Instance.new("Frame", UI)
selectionBox.BackgroundColor3 = Color3.fromRGB(100,100,255)
selectionBox.BackgroundTransparency = 0.5
selectionBox.Visible = false

local function startSelection(pos)
    selecting = true
    selectionStart = pos
    selectionBox.Position = UDim2.new(0, pos.X,0,pos.Y)
    selectionBox.Size = UDim2.new(0,0,0,0)
    selectionBox.Visible = true
end

local function updateSelection(pos)
    if selecting then
        local x1, y1 = selectionStart.X, selectionStart.Y
        local x2, y2 = pos.X, pos.Y
        selectionBox.Position = UDim2.new(0, math.min(x1,x2),0, math.min(y1,y2))
        selectionBox.Size = UDim2.new(0, math.abs(x2-x1),0, math.abs(y2-y1))
    end
end

local function endSelection()
    selecting = false
    selectionBox.Visible = false
    -- Seçilen prov’ları döngüyle alabilirsiniz
end

-- Geliştirilmiş paintProvinceLoop
local function paintProvinceLoop(province)
    local savedColor = province.Color
    task.spawn(function()
        while true do
            if painting then
                if province.Color ~= color then
                    pushUndo(province, province.Color, color)
                    province.Color = color
                    addProvinceToLayer(province)
                    provincespersecond += 1
                end
            end
            if safeMode then
                task.wait(1)
            elseif newpaint then
                task.wait(0.01)
            else
                task.wait(0.05)
            end
        end
    end)
end

-- Mouse ve key input
userInputService.InputBegan:Connect(function(input,isTyping)
    if isTyping == false then
        if input.KeyCode == Enum.KeyCode.Z and userInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
            undo()
        elseif input.KeyCode == Enum.KeyCode.Y and userInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
            redo()
        end
    end
end)

-- Grid çiz (örnek: 20px)
drawGrid(20)
