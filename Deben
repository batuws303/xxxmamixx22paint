-- Settings --
local color = Color3.fromRGB(255,255,255)

-- Services --
local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local tweenService = game:GetService("TweenService")
local players = game:GetService("Players")
local player = players.LocalPlayer
local mouse = player:GetMouse()

-- UI Elements --
local provincesFolder = Instance.new("Model")
provincesFolder.Parent = workspace
local highlight = Instance.new("Highlight")
highlight.FillColor = color
highlight.FillTransparency = 0.8
highlight.Parent = workspace
highlight.Adornee = provincesFolder

local UI = Instance.new("ScreenGui",player.PlayerGui)
local UIHolder = Instance.new("Frame",UI)
UIHolder.AnchorPoint = Vector2.new(0.5,0.5)
UIHolder.BackgroundTransparency = 1
UIHolder.Position = UDim2.new(0.5,0,0.5,0)
UIHolder.Size = UDim2.new(0,0,0,0)
local aspectratio = Instance.new("UIAspectRatioConstraint",UIHolder)
local mainFrame = Instance.new("Frame",UIHolder)
mainFrame.BackgroundColor3 = Color3.fromRGB(33,33,42)
mainFrame.AnchorPoint = Vector2.new(0.5,0.5)
mainFrame.Position = UDim2.new(0.5,0,0.5,0)
mainFrame.Size = UDim2.new(0.5,0,0.276,0)
mainFrame.Rotation = 359
local topBar = Instance.new("Frame",mainFrame)
topBar.BorderColor3 = Color3.fromRGB(0,0,0)
topBar.BackgroundColor3 = Color3.fromRGB(49,49,64)
topBar.Size = UDim2.new(1,0,0.14,0)
local pss = Instance.new("TextLabel",topBar)
pss.Text = "0 paint/second"
pss.AnchorPoint = Vector2.new(0,0.5)
pss.Size = UDim2.new(0.974,0,0.5,0)
pss.Position = UDim2.new(0,0,0.5,0)
pss.TextColor3 = Color3.fromRGB(255,255,255)
pss.BackgroundTransparency = 1
pss.TextScaled = true
pss.TextXAlignment = Enum.TextXAlignment.Right
local scrollFrame = Instance.new("ScrollingFrame",mainFrame)
scrollFrame.BackgroundTransparency = 1
scrollFrame.Position = UDim2.new(0,0,0.14,0)
scrollFrame.Size = UDim2.new(1,0,0.86,0)
scrollFrame.ScrollBarThickness = 5
local panelTitle = Instance.new("TextLabel",topBar)
panelTitle.AnchorPoint = Vector2.new(0,0.5)
panelTitle.BackgroundTransparency = 1
panelTitle.Position = UDim2.new(0.02,0,0.5,0)
panelTitle.Size = UDim2.new(1,0,0.5,0)
panelTitle.Text = '<b>Paint Admin Panel</b><font size="6"> PRO</font>'
panelTitle.RichText = true
panelTitle.TextScaled = true
panelTitle.TextColor3 = Color3.fromRGB(255,255,255)
panelTitle.TextXAlignment = Enum.TextXAlignment.Left
local listlayout = Instance.new("UIListLayout",scrollFrame)
listlayout.Padding = UDim.new(0,10)
local uipadding = Instance.new("UIPadding",scrollFrame)
uipadding.PaddingTop = UDim.new(0,10)
uipadding.PaddingLeft = UDim.new(0,10)
uipadding.PaddingRight = UDim.new(0,10)
uipadding.PaddingBottom = UDim.new(0,10)
local doneButton = Instance.new("TextButton",UI)
doneButton.Visible = false
doneButton.AnchorPoint = Vector2.new(0.5,0)
doneButton.BackgroundColor3 = Color3.fromRGB(0,247,159)
doneButton.Position = UDim2.new(0.5,0,0,0)
doneButton.Size = UDim2.new(0.3,0,0.1,0)
doneButton.TextColor3 = Color3.fromRGB(255,255,255)
doneButton.TextScaled = true
doneButton.Text = "Done"
doneButton.AutoButtonColor = false
doneButton.BorderSizePixel = 0

-- Sounds --
local sound = Instance.new("Sound", workspace)
sound.SoundId = "rbxassetid://4612386227"
local changecolor = Instance.new("Sound", workspace)
changecolor.SoundId = "rbxassetid://4612383790"
local sound2 = Instance.new("Sound", workspace)
sound2.SoundId = "rbxassetid://7486747911"
sound2.PlaybackSpeed = 2
local provinceSound = Instance.new("Sound", workspace)
provinceSound.SoundId = "rbxassetid://5694665239"

-- Variables --
local provinces = {}
local provincespersecond = 0
local pps = 0

local selectColorMode = false
local removeProvincesMode = false
local selectProvincesMode = false
local safeMode = false
local newpaint = false
local painting = true
local keepTerColor = false
local provinceCodeGenerator = 0

-- Dragging variables --
local dragging
local dragInput
local dragStart
local startPos

-- Functions --
local function paintProvinceLoop(province,coro,highlighty)
	local savedColor = color
	local db = true
	local painted = false
	local event
	event = runService.Heartbeat:Connect(function(deltaTime)
		if db and painting then
			if province and province.Parent then
				if province.Color ~= color or (keepTerColor and province.Color ~= savedColor) then
					local args = {
						"PaintPart",
						{["Part"]=province,["Color"]=keepTerColor and savedColor or color},
						"Peace"
					}
					provincespersecond = provincespersecond + 1
					game:GetService("Players").LocalPlayer.Character.PaintBucket.Remotes.ServerControls:InvokeServer(unpack(args))
					painted = true
				end
			else
				event:Disconnect()
			end
		end
	end)
	local provinceInfo = {
		["Province"] = province,
		["Coroutine"] = coro,
		["Event"] = event,
		["Highlight"] = highlighty
	}
	table.insert(provinces,provinceInfo)
	provinceCodeGenerator += 1
end

local function createNewOption(optionType,text,customText,enabled)
	local optionFrame = Instance.new("Frame",scrollFrame)
	optionFrame.BorderColor3 = Color3.fromRGB(0,0,0)
	optionFrame.BackgroundColor3 = Color3.fromRGB(49, 49, 64)
	optionFrame.Size = UDim2.new(1,0,0.075,0)
	optionFrame.Parent = scrollFrame
	local textlabel = Instance.new("TextLabel",optionFrame)
	textlabel.BackgroundTransparency = 1
	textlabel.Position = UDim2.new(0.02,0,0.2,0)
	textlabel.Size = UDim2.new(1,0,0.6,0)
	textlabel.TextScaled = true
	textlabel.Text = text
	textlabel.Font = Enum.Font.SourceSansBold
	textlabel.TextColor3 = Color3.fromRGB(255,255,255)
	textlabel.TextXAlignment = Enum.TextXAlignment.Left
	if optionType == "switch" then
		local switchFrame = Instance.new("Frame",optionFrame)
		switchFrame.BackgroundColor3 = Color3.fromRGB(241, 33, 103)
		switchFrame.Position = UDim2.new(0.865,0,0.125,0)
		switchFrame.Size = UDim2.new(0.125,0,0.75,0)
		switchFrame.BorderSizePixel = 0
		local switch = Instance.new("ImageButton",switchFrame)
		switch.AutoButtonColor = false
		switch.BorderSizePixel = 0
		switch.Size = UDim2.new(1,0,1,0)
		local aspectRatio = Instance.new("UIAspectRatioConstraint",switch)
		if enabled then
			tweenService:Create(switch.Parent,TweenInfo.new(0.1),{BackgroundColor3 = Color3.fromRGB(53, 227, 153)}):Play()
			tweenService:Create(switch,TweenInfo.new(0.1),{Position = UDim2.new(1,0,0,0)}):Play()
			tweenService:Create(switch,TweenInfo.new(0.1),{AnchorPoint = Vector2.new(1,0)}):Play()
		end
		return switch
	elseif optionType == "color" then
		local colorButton = Instance.new("ImageButton",optionFrame)
		colorButton.Position = UDim2.new(0.928,0,0.125,0)
		colorButton.AutoButtonColor = false
		colorButton.Size = UDim2.new(0.062,0,0.75,0)
		return colorButton
	elseif optionType == "custom" then
		local button = Instance.new("ImageButton",optionFrame)
		button.BackgroundColor3 = Color3.fromRGB(100,100,100)
		button.Position = UDim2.new(0.865,0,0.125,0)
		button.Size = UDim2.new(0.125,0,0.75,0)
		button.AutoButtonColor = false
		local textlabel = Instance.new("TextLabel",button)
		textlabel.BackgroundTransparency = 1
		textlabel.Position = UDim2.new(0.5,0,0.5,0)
		textlabel.AnchorPoint = Vector2.new(0.5,0.5)
		textlabel.Size = UDim2.new(0.8,0,0.8,0)
		textlabel.Text = customText
		textlabel.TextScaled = true
		textlabel.Font = Enum.Font.SourceSansBold
		textlabel.TextColor3 = Color3.fromRGB(255,255,255)
		return button
	end
end

-- Drag logic
local function update(input)
	local delta = input.Position - dragStart
	mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

-- Initialization
wait(1)
sound:Play()
if userInputService.MouseEnabled == false then
	tweenService:Create(UIHolder,TweenInfo.new(0.5),{Size = UDim2.new(1.5,0,1.5,0)}):Play()
else
	tweenService:Create(UIHolder,TweenInfo.new(0.5),{Size = UDim2.new(0.75,0,0.75,0)}):Play()
end
tweenService:Create(mainFrame,TweenInfo.new(0.5),{Rotation = 0}):Play()

-- Drag Connections
topBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = mainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
topBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)
userInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

-- Options
local button2 = createNewOption("color","Country Color")
local button1 = createNewOption("custom","Protect Province","Add")
local button5 = createNewOption("custom","Unprotect Province","Remove")
local button3 = createNewOption("custom","Clear Provinces","Clear")
local button4 = createNewOption("switch","Safe Mode")
local togglePaintButton = createNewOption("switch","Toggle Paint",nil,true)
local newPaintButton = createNewOption("switch","Fast Paint")
local territoryColorButton = createNewOption("switch","Keep Territory Color (NEW)")
local randomColorButton = createNewOption("custom","Randomize color (NEW)","Change")

-- Mouse interactions
mouse.Button1Down:Connect(function()
	if mouse.Target and mouse.Target.Name == "Province" then
		if selectColorMode then
			color = mouse.Target.Color
			selectColorMode = false
			UIHolder.Visible = true
			button2.BackgroundColor3 = color
			changecolor:Play()
		end
		if selectProvincesMode then
			provinceSound:Play()
			local clone = mouse.Target:Clone()
			local coro = coroutine.create(paintProvinceLoop)
			coroutine.resume(coro,mouse.Target,coro,clone)
			clone.Position -= Vector3.new(0,0.01,0)
			clone.Material = "Glass"
			clone.Transparency = 1000000
			clone.Parent = provincesFolder
		end
		if removeProvincesMode then
			for _,info in pairs(provinces) do
				if mouse.Target == info.Province then
					coroutine.close(info.Coroutine)
					info.Event:Disconnect()
					info.Highlight:Destroy()
				end
			end
		end
	end
end)

-- Buttons logic (Safe Mode, Fast Paint, Toggle, etc.) remain same as original
-- Randomize color
randomColorButton.MouseButton1Down:Connect(function()
	color = Color3.fromRGB(math.random(0,255),math.random(0,255),math.random(0,255))
	button2.BackgroundColor3 = color
	changecolor:Play()
end)

-- Paint per second display
spawn(function()
	while true do
		task.wait(1)
		pss.TextColor3 = Color3.fromRGB(80, 255, 123)
		if provincespersecond >= 50 then pss.TextColor3 = Color3.fromRGB(247, 226, 112) end
		if provincespersecond >= 100 then pss.TextColor3 = Color3.fromRGB(245, 128, 37) end
		if provincespersecond >= 300 then pss.TextColor3 = Color3.fromRGB(235, 8, 10) end
		if provincespersecond >= 1000 then pss.TextColor3 = Color3.fromRGB(235, 0, 120) end
		pss.Text = tostring(provincespersecond).." paint/second"
		pps = provincespersecond
		provincespersecond = 0
	end
end)
