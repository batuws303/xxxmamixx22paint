-- Settings -- local color = Color3.fromRGB(255,255,255)

-- Services -- local userInputService = game:GetService("UserInputService") local runService = game:GetService("RunService") local tweenService = game:GetService("TweenService") local players = game:GetService("Players")

-- Player & Mouse -- local player = players.LocalPlayer local mouse = player:GetMouse()

-- Main variables -- local provincesFolder = Instance.new("Model") provincesFolder.Parent = workspace

local highlight = Instance.new("Highlight") highlight.FillColor = color highlight.FillTransparency = 0.8 highlight.Parent = workspace highlight.Adornee = provincesFolder

local provinces = {} local provincespersecond = 0 local pps = 0

local selectColorMode = false local removeProvincesMode = false local selectProvincesMode = false local safeMode = false local newpaint = false local painting = true local keepTerColor = false

-- UI Setup -- local UI = Instance.new("ScreenGui",player.PlayerGui) local UIHolder = Instance.new("Frame",UI) UIHolder.AnchorPoint = Vector2.new(0.5,0.5) UIHolder.BackgroundTransparency = 1 UIHolder.Position = UDim2.new(0.5,0,0.5,0) UIHolder.Size = UDim2.new(0.5,0,0.4,0) -- otomatik ekran boyutuna göre

local mainFrame = Instance.new("Frame",UIHolder) mainFrame.BackgroundColor3 = Color3.fromRGB(33,33,42) mainFrame.AnchorPoint = Vector2.new(0.5,0.5) mainFrame.Position = UDim2.new(0.5,0,0.5,0) mainFrame.Size = UDim2.new(1,0,1,0)

local topBar = Instance.new("Frame",mainFrame) topBar.BorderColor3 = Color3.fromRGB(0,0,0) topBar.BackgroundColor3 = Color3.fromRGB(49,49,64) topBar.Size = UDim2.new(1,0,0.1,0)

local pss = Instance.new("TextLabel",topBar) pss.Text = "0 paint/second" pss.AnchorPoint = Vector2.new(0,0.5) pss.Size = UDim2.new(0.974,0,0.5,0) pss.Position = UDim2.new(0,0,0.5,0) pss.TextColor3 = Color3.fromRGB(255,255,255) pss.BackgroundTransparency = 1 pss.TextScaled = true pss.TextXAlignment = Enum.TextXAlignment.Right

local panelTitle = Instance.new("TextLabel",topBar) panelTitle.AnchorPoint = Vector2.new(0,0.5) panelTitle.BackgroundTransparency = 1 panelTitle.Position = UDim2.new(0.02,0,0.5,0) panelTitle.Size = UDim2.new(1,0,0.5,0) panelTitle.Text = '<b>Paint Admin Panel</b><font size="6"> PRO</font>' panelTitle.RichText = true panelTitle.TextScaled = true panelTitle.TextColor3 = Color3.fromRGB(255,255,255) panelTitle.TextXAlignment = Enum.TextXAlignment.Left

local scrollFrame = Instance.new("ScrollingFrame",mainFrame) scrollFrame.BackgroundTransparency = 1 scrollFrame.Position = UDim2.new(0,0,0.1,0) scrollFrame.Size = UDim2.new(1,0,0.9,0) scrollFrame.ScrollBarThickness = 8

local listlayout = Instance.new("UIListLayout",scrollFrame) listlayout.Padding = UDim.new(0,10)

local uipadding = Instance.new("UIPadding",scrollFrame) uipadding.PaddingTop = UDim.new(0,10) uipadding.PaddingLeft = UDim.new(0,10) uipadding.PaddingRight = UDim.new(0,10) uipadding.PaddingBottom = UDim.new(0,10)

-- Button helper function -- local function createOption(optionType, text, customText, enabled) local optionFrame = Instance.new("Frame",scrollFrame) optionFrame.BackgroundColor3 = Color3.fromRGB(49,49,64) optionFrame.Size = UDim2.new(1,0,0.075,0) local textLabel = Instance.new("TextLabel", optionFrame) textLabel.BackgroundTransparency = 1 textLabel.Position = UDim2.new(0.02,0,0.2,0) textLabel.Size = UDim2.new(0.6,0,0.6,0) textLabel.Text = text textLabel.TextScaled = true textLabel.TextColor3 = Color3.fromRGB(255,255,255) textLabel.TextXAlignment = Enum.TextXAlignment.Left

if optionType == "switch" then
    local switchFrame = Instance.new("Frame", optionFrame)
    switchFrame.BackgroundColor3 = enabled and Color3.fromRGB(53,227,153) or Color3.fromRGB(241,33,103)
    switchFrame.Position = UDim2.new(0.75,0,0.125,0)
    switchFrame.Size = UDim2.new(0.2,0,0.75,0)
    local switchButton = Instance.new("TextButton", switchFrame)
    switchButton.Text = ""
    switchButton.Size = UDim2.new(1,0,1,0)
    switchButton.BackgroundTransparency = 1
    return switchFrame, switchButton
elseif optionType == "custom" then
    local button = Instance.new("TextButton", optionFrame)
    button.Text = customText or text
    button.Size = UDim2.new(0.2,0,0.75,0)
    button.Position = UDim2.new(0.75,0,0.125,0)
    return button
elseif optionType == "color" then
    local colorButton = Instance.new("TextButton", optionFrame)
    colorButton.BackgroundColor3 = color
    colorButton.Size = UDim2.new(0.2,0,0.75,0)
    colorButton.Position = UDim2.new(0.75,0,0.125,0)
    return colorButton
end

end

-- Create Buttons -- local addButton = createOption("switch", "Add Province", nil, false) local removeButton = createOption("switch", "Remove Province", nil, false) local clearButton = createOption("custom", "Clear Provinces", "Clear") local colorButton = createOption("color", "Country Color") local safeModeButton = createOption("switch", "Safe Mode", nil, false) local fastPaintButton = createOption("switch", "Fast Paint", nil, false)

-- Functionality -- local function toggleButton(switchFrame) if switchFrame.BackgroundColor3 == Color3.fromRGB(53,227,153) then switchFrame.BackgroundColor3 = Color3.fromRGB(241,33,103) return false else switchFrame.BackgroundColor3 = Color3.fromRGB(53,227,153) return true end end

-- Connect toggles -- addButton[2].MouseButton1Click:Connect(function() selectProvincesMode = toggleButton(addButton[1]) end) removeButton[2].MouseButton1Click:Connect(function() removeProvincesMode = toggleButton(removeButton[1]) end) safeModeButton[2].MouseButton1Click:Connect(function() safeMode = toggleButton(safeModeButton[1]) end) fastPaintButton[2].MouseButton1Click:Connect(function() newpaint = toggleButton(fastPaintButton[1]) end)

-- Color selection -- colorButton.MouseButton1Click:Connect(function() selectColorMode = true end)

-- Clear -- clearButton.MouseButton1Click:Connect(function() for _, info in pairs(provinces) do if info.Event then info.Event:Disconnect() end if info.Highlight then info.Highlight:Destroy() end end provinces = {} end)

-- Painting loop local function paintProvince(province) local startTime = tick() local maxDuration = 60 -- saniye local eventConn eventConn = runService.Heartbeat:Connect(function() if not painting then return end if province.Color ~= color then local args = {"PaintPart", {Part = province, Color = color}, "Peace"} game:GetService("Players”).LocalPlayer.Character.PaintBucket.Remotes.ServerControls:InvokeServer(unpack(args)) provincespersecond += 1 end if tick() - startTime >= maxDuration then if eventConn then eventConn:Disconnect() end end end) table.insert(provinces, {Province = province, Event = eventConn}) end

-- FPS bağımsız hızlı boyama runService.Heartbeat:Connect(function(deltaTime) if newpaint then for _, info in pairs(provinces) do paintProvince(info.Province) end end end)

-- PPS Update spawn(function() while task.wait(1) do pss.Text = provincespersecond.." paint/second" provincespersecond = 0 end end)

