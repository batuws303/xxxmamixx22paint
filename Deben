-- Settings --
local color = Color3.fromRGB(255,255,255)

-- Services --
local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local tweenService = game:GetService("TweenService")
local players = game:GetService("Players")

local player = players.LocalPlayer
local mouse = player:GetMouse()

-- UI --
local UI = Instance.new("ScreenGui",player.PlayerGui)
UI.ResetOnSpawn = false

local UIHolder = Instance.new("Frame",UI)
UIHolder.AnchorPoint = Vector2.new(0.5,0.5)
UIHolder.BackgroundTransparency = 1
UIHolder.Position = UDim2.new(0.5,0,0.5,0)
UIHolder.Size = UDim2.new(0.7,0,0.7,0)

local mainFrame = Instance.new("Frame",UIHolder)
mainFrame.BackgroundColor3 = Color3.fromRGB(33,33,42)
mainFrame.AnchorPoint = Vector2.new(0.5,0.5)
mainFrame.Position = UDim2.new(0.5,0,0.5,0)
mainFrame.Size = UDim2.new(0.7,0,0.35,0)

-- Top Bar for dragging
local topBar = Instance.new("Frame",mainFrame)
topBar.BackgroundColor3 = Color3.fromRGB(49,49,64)
topBar.Size = UDim2.new(1,0,0.14,0)

local panelTitle = Instance.new("TextLabel",topBar)
panelTitle.Text = '<b>Paint Admin Panel</b><font size="6"> PRO</font>'
panelTitle.RichText = true
panelTitle.TextScaled = true
panelTitle.TextColor3 = Color3.fromRGB(255,255,255)
panelTitle.TextXAlignment = Enum.TextXAlignment.Left
panelTitle.AnchorPoint = Vector2.new(0,0.5)
panelTitle.Position = UDim2.new(0.02,0,0.5,0)
panelTitle.BackgroundTransparency = 1

local pss = Instance.new("TextLabel",topBar)
pss.Text = "0 paint/second"
pss.AnchorPoint = Vector2.new(0,0.5)
pss.Size = UDim2.new(0.974,0,0.5,0)
pss.Position = UDim2.new(0,0,0.5,0)
pss.TextColor3 = Color3.fromRGB(255,255,255)
pss.BackgroundTransparency = 1
pss.TextScaled = true
pss.TextXAlignment = Enum.TextXAlignment.Right

-- Scroll Frame --
local scrollFrame = Instance.new("ScrollingFrame",mainFrame)
scrollFrame.BackgroundTransparency = 1
scrollFrame.Position = UDim2.new(0,0,0.14,0)
scrollFrame.Size = UDim2.new(1,0,0.86,0)
scrollFrame.ScrollBarThickness = 6

local listlayout = Instance.new("UIListLayout",scrollFrame)
listlayout.Padding = UDim.new(0,10)
local uipadding = Instance.new("UIPadding",scrollFrame)
uipadding.PaddingTop = UDim.new(0,10)
uipadding.PaddingLeft = UDim.new(0,10)
uipadding.PaddingRight = UDim.new(0,10)
uipadding.PaddingBottom = UDim.new(0,10)

-- Sounds --
local provinceSound = Instance.new("Sound",workspace)
provinceSound.SoundId = "rbxassetid://5694665239"
provinceSound.Volume = 1

local changecolor = Instance.new("Sound",workspace)
changecolor.SoundId = "rbxassetid://4612383790"
changecolor.Volume = 1

-- Variables --
local provinces = {}
local provincespersecond = 0

local selectColorMode = false
local removeProvincesMode = false
local selectProvincesMode = false
local safeMode = false
local newpaint = false
local painting = true
local keepTerColor = false

-- UI Functions --
local function createButton(text,parent)
	local btn = Instance.new("TextButton",parent)
	btn.Text = text
	btn.Size = UDim2.new(1,0,0.075,0)
	btn.BackgroundColor3 = Color3.fromRGB(49,49,64)
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.TextScaled = true
	btn.Font = Enum.Font.SourceSansBold
	return btn
end

local function toggleButtonColor(btn,state)
	if state then
		btn.BackgroundColor3 = Color3.fromRGB(53,227,153)
	else
		btn.BackgroundColor3 = Color3.fromRGB(241,33,103)
	end
end

-- Buttons --
local colorButton = createButton("Country Color",scrollFrame)
local addButton = createButton("Add Province",scrollFrame)
local removeButton = createButton("Remove Province",scrollFrame)
local clearButton = createButton("Clear Provinces",scrollFrame)
local fastPaintButton = createButton("Fast Paint",scrollFrame)
local togglePaintButton = createButton("Toggle Paint",scrollFrame)
local safeModeButton = createButton("Safe Mode",scrollFrame)
local keepColorButton = createButton("Keep Territory Color",scrollFrame)
local randomColorButton = createButton("Random Color",scrollFrame)

-- Paint Loop --
local function paintProvinceLoop(province)
	if not province then return end
	local savedColor = color
	while painting do
		local targetColor = color
		if keepTerColor then targetColor = savedColor end
		if province.Color ~= targetColor then
			local args = {
				[1] = "PaintPart",
				[2] = {["Part"] = province,["Color"] = targetColor},
				[3] = "Peace"
			}
			game.Players.LocalPlayer.Character.PaintBucket.Remotes.ServerControls:InvokeServer(unpack(args))
			provincespersecond += 1
		end
		if safeMode then
			wait(0.2)
		elseif newpaint then
			wait(0.001)
		else
			wait(0.05)
		end
	end
end

-- Mouse Events --
mouse.Button1Down:Connect(function()
	if mouse.Target and mouse.Target.Name == "Province" then
		if selectColorMode then
			color = mouse.Target.Color
			selectColorMode = false
			colorButton.BackgroundColor3 = color
			changecolor:Play()
		end
		if selectProvincesMode then
			provinceSound:Play()
			local coro = coroutine.create(paintProvinceLoop)
			coroutine.resume(coro,mouse.Target)
			table.insert(provinces,{Province=mouse.Target,Coroutine=coro})
			toggleButtonColor(addButton,true)
		end
		if removeProvincesMode then
			for i,info in pairs(provinces) do
				if info.Province == mouse.Target then
					coroutine.close(info.Coroutine)
					table.remove(provinces,i)
				end
			end
			toggleButtonColor(removeButton,true)
		end
	end
end)

-- Button Actions --
colorButton.MouseButton1Down:Connect(function() selectColorMode = true end)
addButton.MouseButton1Down:Connect(function() 
	selectProvincesMode = true 
	toggleButtonColor(addButton,true) 
	toggleButtonColor(removeButton,false)
end)
removeButton.MouseButton1Down:Connect(function() 
	removeProvincesMode = true 
	toggleButtonColor(removeButton,true)
	toggleButtonColor(addButton,false)
end)
clearButton.MouseButton1Down:Connect(function()
	for _,info in pairs(provinces) do
		coroutine.close(info.Coroutine)
	end
	provinces = {}
	toggleButtonColor(addButton,false)
	toggleButtonColor(removeButton,false)
end)
fastPaintButton.MouseButton1Down:Connect(function() newpaint = not newpaint toggleButtonColor(fastPaintButton,newpaint) end)
togglePaintButton.MouseButton1Down:Connect(function() painting = not painting toggleButtonColor(togglePaintButton,painting) end)
safeModeButton.MouseButton1Down:Connect(function() safeMode = not safeMode toggleButtonColor(safeModeButton,safeMode) end)
keepColorButton.MouseButton1Down:Connect(function() keepTerColor = not keepTerColor toggleButtonColor(keepColorButton,keepTerColor) end)
randomColorButton.MouseButton1Down:Connect(function() color = Color3.fromRGB(math.random(0,255),math.random(0,255),math.random(0,255)) colorButton.BackgroundColor3=color changecolor:Play() end)

-- PPS Update --
spawn(function()
	while true do
		pss.Text = provincespersecond.." paint/second"
		provincespersecond = 0
		wait(1)
	end
end)

-- Dragging UI --
local dragging, dragInput, dragStart, startPos
topBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = UIHolder.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
topBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)
userInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		UIHolder.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)
